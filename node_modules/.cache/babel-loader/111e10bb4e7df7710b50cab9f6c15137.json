{"ast":null,"code":"var _jsxFileName = \"/Users/drk/Documents/final-project/src/pages/PaveRepave.js\";\nimport { Box, Grid, MenuItem, rgbToHex, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\nimport tableIcons, { options } from \"../component/Universal/table_attributes\";\nimport MROButton from \"../component/FormComponents/Button\";\nimport MROSelect from \"../component/FormComponents/Select\";\nconst useStyles = makeStyles(theme => ({\n  action: {\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n      justifyContent: \"flex-start\"\n    }\n  }\n}));\nexport const PaveRepave = () => {\n  const tableOptions = { ...options,\n    search: false,\n    sorting: true,\n    filtering: true,\n    selection: true\n  };\n  const columns = [{\n    title: \"Forest\",\n    field: \"forest\",\n    lookup: constructObject(data.map(d => d.forest))\n  }, {\n    title: \"Domain\",\n    field: \"domain\",\n    lookup: constructObject(data.map(d => d.domain))\n  }, {\n    title: \"DataCenter\",\n    field: \"d_center\",\n    lookup: constructObject(data.map(d => d.d_center))\n  }, {\n    title: \"DCName\",\n    field: \"dc_name\",\n    lookup: constructObject(data.map(d => d.dc_name)),\n    render: rowData => rowData.dc_name\n  }, {\n    title: \"Last(Re)Paved\",\n    field: \"last_paved\",\n    render: rowData => moment(rowData.last_paved).format(\"DD-MM-YYYY\")\n  }, {\n    title: \"Status\",\n    field: \"status\"\n  }];\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    minHeight: \"100vh\",\n    mt: 2,\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Filter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"\",\n    icons: tableIcons,\n    options: tableOptions,\n    columns: columns,\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })));\n};\nexport const Filter = () => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    my: 2,\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    md: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    pt: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, \"Filter :\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    md: 8,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MROSelect, {\n    name: \"forest\",\n    label: \"Forest\",\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, data && data.map(item => /*#__PURE__*/React.createElement(MenuItem, {\n    key: item.forest,\n    value: item.forest,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, item.forest)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MROSelect, {\n    name: \"domain\",\n    label: \"Domain\",\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, data && data.map(item => /*#__PURE__*/React.createElement(MenuItem, {\n    key: item.domain,\n    value: item.domain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, item.domain)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MROSelect, {\n    name: \"dc\",\n    label: \"DataCenter\",\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, data && data.map(item => /*#__PURE__*/React.createElement(MenuItem, {\n    key: item.d_center,\n    value: item.d_center,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, item.d_center)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MROSelect, {\n    name: \"dc_name\",\n    label: \"DC Name\",\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, data && data.map(item => /*#__PURE__*/React.createElement(MenuItem, {\n    key: item.dc_name,\n    value: item.dc_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, item.dc_name))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    md: 3,\n    lg: 3,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"flex-end\",\n    className: classes.action,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MROButton, {\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, \"Trigger Repave\"), /*#__PURE__*/React.createElement(Spacer, {\n    height: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(MROButton, {\n    variant: \"contained\",\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, \"Demote\"))))));\n};\nexport const Spacer = ({\n  height\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: height || \"10px\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }));\n};\nexport const constructObject = arr => {\n  let obj = {};\n  arr.forEach((item, index) => {\n    obj[arr[index]] = arr[index];\n  });\n  return obj;\n};\nexport const data = Array.from(Array(10)).map((record, i) => ({\n  forest: `Forest-${i + 1}`,\n  domain: `Domain-${i + 1}`,\n  d_center: `Center-${(i + 1) * 10}`,\n  dc_name: `dcname${(i + 1) * 200}`,\n  owner: \"E123456\",\n  progress: `${i + 1}/${i + 1 + 10}`,\n  request: `#${i + 1 + 50}`,\n  last_paved: Date.now(),\n  status: \"PaveCompleted\",\n  reported_time: moment(Date.now()).format(\"DD-MM-YYYY HH:mm:ss A\"),\n  failure_reason: \"Reason if any...\",\n  dc_diag_check: `Check Name-${i + 1}`,\n  issuer: `Issuer name-${i + 1}`,\n  cert_name: `Cert Name-${i + 1}`,\n  restarted_by: \"E123456\",\n  restarted_at: moment(Date.now()).format(\"DD-MM-YYYY HH:mm:ss A\")\n}));","map":{"version":3,"sources":["/Users/drk/Documents/final-project/src/pages/PaveRepave.js"],"names":["Box","Grid","MenuItem","rgbToHex","Typography","React","MaterialTable","makeStyles","moment","tableIcons","options","MROButton","MROSelect","useStyles","theme","action","breakpoints","down","flexDirection","justifyContent","PaveRepave","tableOptions","search","sorting","filtering","selection","columns","title","field","lookup","constructObject","data","map","d","forest","domain","d_center","dc_name","render","rowData","last_paved","format","Filter","classes","item","Spacer","height","width","arr","obj","forEach","index","Array","from","record","i","owner","progress","request","Date","now","status","reported_time","failure_reason","dc_diag_check","issuer","cert_name","restarted_by","restarted_at"],"mappings":";AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,QAApB,EAA8BC,QAA9B,EAAwCC,UAAxC,QAA0D,mBAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,UAAP,IAAqBC,OAArB,QAAoC,yCAApC;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACvCC,EAAAA,MAAM,EAAE;AACN,KAACD,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BC,MAAAA,aAAa,EAAE,QADe;AAE9BC,MAAAA,cAAc,EAAE;AAFc;AAD1B;AAD+B,CAAZ,CAAD,CAA5B;AASA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,QAAMC,YAAY,GAAG,EACnB,GAAGX,OADgB;AAEnBY,IAAAA,MAAM,EAAE,KAFW;AAGnBC,IAAAA,OAAO,EAAE,IAHU;AAInBC,IAAAA,SAAS,EAAE,IAJQ;AAKnBC,IAAAA,SAAS,EAAE;AALQ,GAArB;AAQA,QAAMC,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,KAAK,EAAE,QAFT;AAGEC,IAAAA,MAAM,EAAEC,eAAe,CAACC,IAAI,CAACC,GAAL,CAAUC,CAAD,IAAOA,CAAC,CAACC,MAAlB,CAAD;AAHzB,GADc,EAMd;AACEP,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,KAAK,EAAE,QAFT;AAGEC,IAAAA,MAAM,EAAEC,eAAe,CAACC,IAAI,CAACC,GAAL,CAAUC,CAAD,IAAOA,CAAC,CAACE,MAAlB,CAAD;AAHzB,GANc,EAWd;AACER,IAAAA,KAAK,EAAE,YADT;AAEEC,IAAAA,KAAK,EAAE,UAFT;AAGEC,IAAAA,MAAM,EAAEC,eAAe,CAACC,IAAI,CAACC,GAAL,CAAUC,CAAD,IAAOA,CAAC,CAACG,QAAlB,CAAD;AAHzB,GAXc,EAgBd;AACET,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,KAAK,EAAE,SAFT;AAGEC,IAAAA,MAAM,EAAEC,eAAe,CAACC,IAAI,CAACC,GAAL,CAAUC,CAAD,IAAOA,CAAC,CAACI,OAAlB,CAAD,CAHzB;AAIEC,IAAAA,MAAM,EAAGC,OAAD,IAAaA,OAAO,CAACF;AAJ/B,GAhBc,EAsBd;AACEV,IAAAA,KAAK,EAAE,eADT;AAEEC,IAAAA,KAAK,EAAE,YAFT;AAGEU,IAAAA,MAAM,EAAGC,OAAD,IAAa/B,MAAM,CAAC+B,OAAO,CAACC,UAAT,CAAN,CAA2BC,MAA3B,CAAkC,YAAlC;AAHvB,GAtBc,EA2Bd;AACEd,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GA3Bc,CAAhB;AAiCA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,EAAE,EAAE,CAA3B;AAA8B,IAAA,CAAC,EAAE,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,EADR;AAEE,IAAA,KAAK,EAAEnB,UAFT;AAGE,IAAA,OAAO,EAAEY,YAHX;AAIE,IAAA,OAAO,EAAEK,OAJX;AAKE,IAAA,IAAI,EAAEK,IALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAcD,CAxDM;AA0DP,OAAO,MAAMW,MAAM,GAAG,MAAM;AAC1B,QAAMC,OAAO,GAAG9B,SAAS,EAAzB;AAEA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,KAAK,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,UAAU,EAAC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,MAApB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,EAAE,EAAE,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,CADF,eAME,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,MAApB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,EAAE,EAAE,CAAjC;AAAoC,IAAA,OAAO,EAAE,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAE,QAAjB;AAA2B,IAAA,KAAK,EAAE,QAAlC;AAA4C,IAAA,QAAQ,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGkB,IAAI,IACHA,IAAI,CAACC,GAAL,CAAUY,IAAD,iBACP,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACV,MAApB;AAA4B,IAAA,KAAK,EAAEU,IAAI,CAACV,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,IAAI,CAACV,MADR,CADF,CAFJ,CADF,CADF,eAWE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAE,QAAjB;AAA2B,IAAA,KAAK,EAAE,QAAlC;AAA4C,IAAA,QAAQ,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,IACHA,IAAI,CAACC,GAAL,CAAUY,IAAD,iBACP,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACT,MAApB;AAA4B,IAAA,KAAK,EAAES,IAAI,CAACT,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,IAAI,CAACT,MADR,CADF,CAFJ,CADF,CAXF,eAqBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAE,IAAjB;AAAuB,IAAA,KAAK,EAAE,YAA9B;AAA4C,IAAA,QAAQ,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,IACHA,IAAI,CAACC,GAAL,CAAUY,IAAD,iBACP,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACR,QAApB;AAA8B,IAAA,KAAK,EAAEQ,IAAI,CAACR,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,IAAI,CAACR,QADR,CADF,CAFJ,CADF,CArBF,eA+BE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAE,SAAjB;AAA4B,IAAA,KAAK,EAAE,SAAnC;AAA8C,IAAA,QAAQ,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,IACHA,IAAI,CAACC,GAAL,CAAUY,IAAD,iBACP,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACP,OAApB;AAA6B,IAAA,KAAK,EAAEO,IAAI,CAACP,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGO,IAAI,CAACP,OADR,CADF,CAFJ,CADF,CA/BF,CANF,eAgDE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,MAApB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,EAAE,EAAE,CAAjC;AAAoC,IAAA,EAAE,EAAE,CAAxC;AAA2C,IAAA,OAAO,EAAC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,MAApB;AAAqB,IAAA,OAAO,EAAC,UAA7B;AAAwC,IAAA,SAAS,EAAEM,OAAO,CAAC5B,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,WAAnB;AAA+B,IAAA,KAAK,EAAC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAE,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,WAAnB;AAA+B,IAAA,KAAK,EAAC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CADF,CAhDF,CADF,CADF,CADF;AAkED,CArEM;AAuEP,OAAO,MAAM8B,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACpC,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAAEA,MAAAA,MAAM,EAAEA,MAAM,IAAI,MAApB;AAA4BC,MAAAA,KAAK,EAAE;AAAnC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CANM;AAQP,OAAO,MAAMjB,eAAe,GAAIkB,GAAD,IAAS;AACtC,MAAIC,GAAG,GAAG,EAAV;AACAD,EAAAA,GAAG,CAACE,OAAJ,CAAY,CAACN,IAAD,EAAOO,KAAP,KAAiB;AAC3BF,IAAAA,GAAG,CAACD,GAAG,CAACG,KAAD,CAAJ,CAAH,GAAkBH,GAAG,CAACG,KAAD,CAArB;AACD,GAFD;AAGA,SAAOF,GAAP;AACD,CANM;AAQP,OAAO,MAAMlB,IAAI,GAAGqB,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,EAAD,CAAhB,EAAsBpB,GAAtB,CAA0B,CAACsB,MAAD,EAASC,CAAT,MAAgB;AAC5DrB,EAAAA,MAAM,EAAG,UAASqB,CAAC,GAAG,CAAE,EADoC;AAE5DpB,EAAAA,MAAM,EAAG,UAASoB,CAAC,GAAG,CAAE,EAFoC;AAG5DnB,EAAAA,QAAQ,EAAG,UAAS,CAACmB,CAAC,GAAG,CAAL,IAAU,EAAG,EAH2B;AAI5DlB,EAAAA,OAAO,EAAG,SAAQ,CAACkB,CAAC,GAAG,CAAL,IAAU,GAAI,EAJ4B;AAK5DC,EAAAA,KAAK,EAAE,SALqD;AAM5DC,EAAAA,QAAQ,EAAG,GAAEF,CAAC,GAAG,CAAE,IAAGA,CAAC,GAAG,CAAJ,GAAQ,EAAG,EAN2B;AAO5DG,EAAAA,OAAO,EAAG,IAAGH,CAAC,GAAG,CAAJ,GAAQ,EAAG,EAPoC;AAQ5Df,EAAAA,UAAU,EAAEmB,IAAI,CAACC,GAAL,EARgD;AAS5DC,EAAAA,MAAM,EAAE,eAToD;AAU5DC,EAAAA,aAAa,EAAEtD,MAAM,CAACmD,IAAI,CAACC,GAAL,EAAD,CAAN,CAAmBnB,MAAnB,CAA0B,uBAA1B,CAV6C;AAW5DsB,EAAAA,cAAc,EAAE,kBAX4C;AAY5DC,EAAAA,aAAa,EAAG,cAAaT,CAAC,GAAG,CAAE,EAZyB;AAa5DU,EAAAA,MAAM,EAAG,eAAcV,CAAC,GAAG,CAAE,EAb+B;AAc5DW,EAAAA,SAAS,EAAG,aAAYX,CAAC,GAAG,CAAE,EAd8B;AAe5DY,EAAAA,YAAY,EAAE,SAf8C;AAgB5DC,EAAAA,YAAY,EAAE5D,MAAM,CAACmD,IAAI,CAACC,GAAL,EAAD,CAAN,CAAmBnB,MAAnB,CAA0B,uBAA1B;AAhB8C,CAAhB,CAA1B,CAAb","sourcesContent":["import { Box, Grid, MenuItem, rgbToHex, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\nimport tableIcons, { options } from \"../component/Universal/table_attributes\";\nimport MROButton from \"../component/FormComponents/Button\";\nimport MROSelect from \"../component/FormComponents/Select\";\n\nconst useStyles = makeStyles((theme) => ({\n  action: {\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n      justifyContent: \"flex-start\",\n    },\n  },\n}));\n\nexport const PaveRepave = () => {\n  const tableOptions = {\n    ...options,\n    search: false,\n    sorting: true,\n    filtering: true,\n    selection: true,\n  };\n\n  const columns = [\n    {\n      title: \"Forest\",\n      field: \"forest\",\n      lookup: constructObject(data.map((d) => d.forest)),\n    },\n    {\n      title: \"Domain\",\n      field: \"domain\",\n      lookup: constructObject(data.map((d) => d.domain)),\n    },\n    {\n      title: \"DataCenter\",\n      field: \"d_center\",\n      lookup: constructObject(data.map((d) => d.d_center)),\n    },\n    {\n      title: \"DCName\",\n      field: \"dc_name\",\n      lookup: constructObject(data.map((d) => d.dc_name)),\n      render: (rowData) => rowData.dc_name,\n    },\n    {\n      title: \"Last(Re)Paved\",\n      field: \"last_paved\",\n      render: (rowData) => moment(rowData.last_paved).format(\"DD-MM-YYYY\"),\n    },\n    {\n      title: \"Status\",\n      field: \"status\",\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      <Box minHeight=\"100vh\" mt={2} p={2}>\n        <Filter />\n        <MaterialTable\n          title=\"\"\n          icons={tableIcons}\n          options={tableOptions}\n          columns={columns}\n          data={data}\n        />\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport const Filter = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Box my={2} width=\"100%\">\n        <Grid container alignItems=\"flex-start\">\n          <Grid item container xs={12} md={1}>\n            <Box pt={0.5}>\n              <Typography variant=\"subtitle2\">Filter :</Typography>\n            </Box>\n          </Grid>\n          <Grid item container xs={12} md={8} spacing={2}>\n            <Grid item xs={12} md={6} lg={3}>\n              <MROSelect name={\"forest\"} label={\"Forest\"} multiple>\n                {data &&\n                  data.map((item) => (\n                    <MenuItem key={item.forest} value={item.forest}>\n                      {item.forest}\n                    </MenuItem>\n                  ))}\n              </MROSelect>\n            </Grid>\n            <Grid item xs={12} md={6} lg={3}>\n              <MROSelect name={\"domain\"} label={\"Domain\"} multiple>\n                {data &&\n                  data.map((item) => (\n                    <MenuItem key={item.domain} value={item.domain}>\n                      {item.domain}\n                    </MenuItem>\n                  ))}\n              </MROSelect>\n            </Grid>\n            <Grid item xs={12} md={6} lg={3}>\n              <MROSelect name={\"dc\"} label={\"DataCenter\"} multiple>\n                {data &&\n                  data.map((item) => (\n                    <MenuItem key={item.d_center} value={item.d_center}>\n                      {item.d_center}\n                    </MenuItem>\n                  ))}\n              </MROSelect>\n            </Grid>\n            <Grid item xs={12} md={6} lg={3}>\n              <MROSelect name={\"dc_name\"} label={\"DC Name\"} multiple>\n                {data &&\n                  data.map((item) => (\n                    <MenuItem key={item.dc_name} value={item.dc_name}>\n                      {item.dc_name}\n                    </MenuItem>\n                  ))}\n              </MROSelect>\n            </Grid>\n          </Grid>\n          <Grid item container xs={12} md={3} lg={3} justify=\"flex-end\">\n            <Grid item container justify=\"flex-end\" className={classes.action}>\n              <MROButton variant=\"contained\" color=\"primary\">\n                Trigger Repave\n              </MROButton>\n              <Spacer height={10} />\n              <MROButton variant=\"contained\" color=\"default\">\n                Demote\n              </MROButton>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport const Spacer = ({ height }) => {\n  return (\n    <React.Fragment>\n      <div style={{ height: height || \"10px\", width: \"100%\" }}></div>\n    </React.Fragment>\n  );\n};\n\nexport const constructObject = (arr) => {\n  let obj = {};\n  arr.forEach((item, index) => {\n    obj[arr[index]] = arr[index];\n  });\n  return obj;\n};\n\nexport const data = Array.from(Array(10)).map((record, i) => ({\n  forest: `Forest-${i + 1}`,\n  domain: `Domain-${i + 1}`,\n  d_center: `Center-${(i + 1) * 10}`,\n  dc_name: `dcname${(i + 1) * 200}`,\n  owner: \"E123456\",\n  progress: `${i + 1}/${i + 1 + 10}`,\n  request: `#${i + 1 + 50}`,\n  last_paved: Date.now(),\n  status: \"PaveCompleted\",\n  reported_time: moment(Date.now()).format(\"DD-MM-YYYY HH:mm:ss A\"),\n  failure_reason: \"Reason if any...\",\n  dc_diag_check: `Check Name-${i + 1}`,\n  issuer: `Issuer name-${i + 1}`,\n  cert_name: `Cert Name-${i + 1}`,\n  restarted_by: \"E123456\",\n  restarted_at: moment(Date.now()).format(\"DD-MM-YYYY HH:mm:ss A\"),\n}));\n"]},"metadata":{},"sourceType":"module"}
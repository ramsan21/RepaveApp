{"ast":null,"code":"var _jsxFileName = \"/Users/drk/Documents/final-project/src/component/MiniDrawer.js\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { BrowserRouter as Router, withRouter } from \"react-router-dom\";\nimport { SideBar } from \"../static/SideBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Avatar } from \"@material-ui/core\";\nimport { AppBar, Toolbar, IconButton, Typography, InputBase, Hidden, Box } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Link } from \"react-router-dom\";\nimport ListItemLinkContainer from \"../container/ListItemLinkContainer\";\nimport { useStyles } from \"../static/MiniDrawerStyles\";\n\nfunction MiniDrawer(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const {\n    opensidebar,\n    handlesidebar\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    className: clsx(classes.appBar, {\n      [classes.appBarShift]: opensidebar\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"Open drawer\",\n    onClick: handlesidebar,\n    edge: \"start\",\n    className: clsx(classes.menuButton, {\n      [classes.hide]: opensidebar\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      color: \"white\"\n    },\n    component: Link,\n    to: \"/\",\n    variant: \"h6\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"JPMORGAN CHASE & Co.\")), !opensidebar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.searchIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(InputBase, {\n    placeholder: \"Search\\u2026\",\n    classes: {\n      root: classes.inputRoot,\n      input: classes.inputInput\n    },\n    inputProps: {\n      \"aria-label\": \"search\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Creative Tim\")))), /*#__PURE__*/React.createElement(Drawer, {\n    variant: \"permanent\",\n    className: clsx(classes.drawer, {\n      [classes.drawerOpen]: opensidebar,\n      [classes.drawerClose]: !opensidebar\n    }),\n    classes: {\n      paper: clsx({\n        [classes.drawerOpen]: opensidebar,\n        [classes.drawerClose]: !opensidebar\n      }, classes.darkBackground)\n    },\n    open: opensidebar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handlesidebar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, theme.direction === \"rtl\" ? /*#__PURE__*/React.createElement(ChevronRightIcon, {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"nav\", {\n    className: classes.lists,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, SideBar.map((menu, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListItemLinkContainer, Object.assign({}, props, {\n    menuobj: menu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  })))))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default withRouter(MiniDrawer);","map":{"version":3,"sources":["/Users/drk/Documents/final-project/src/component/MiniDrawer.js"],"names":["React","clsx","useTheme","Drawer","List","Divider","ChevronLeftIcon","ChevronRightIcon","SearchIcon","BrowserRouter","Router","withRouter","SideBar","CssBaseline","Avatar","AppBar","Toolbar","IconButton","Typography","InputBase","Hidden","Box","MenuIcon","Link","ListItemLinkContainer","useStyles","MiniDrawer","props","classes","theme","opensidebar","handlesidebar","appBar","appBarShift","menuButton","hide","color","search","searchIcon","root","inputRoot","input","inputInput","drawer","drawerOpen","drawerClose","paper","darkBackground","toolbar","direction","lists","map","menu","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { BrowserRouter as Router, withRouter } from \"react-router-dom\";\nimport { SideBar } from \"../static/SideBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Avatar } from \"@material-ui/core\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  InputBase,\n  Hidden,\n  Box,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Link } from \"react-router-dom\";\nimport ListItemLinkContainer from \"../container/ListItemLinkContainer\";\nimport { useStyles } from \"../static/MiniDrawerStyles\";\n\nfunction MiniDrawer(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { opensidebar, handlesidebar } = props;\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: opensidebar,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"Open drawer\"\n            onClick={handlesidebar}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: opensidebar,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Hidden smDown>\n            <Typography\n              style={{ color: \"white\" }}\n              component={Link}\n              to=\"/\"\n              variant=\"h6\"\n              noWrap\n            >\n              JPMORGAN CHASE & Co.\n            </Typography>\n          </Hidden>\n          {!opensidebar && (\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"Search…\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ \"aria-label\": \"search\" }}\n              />\n            </div>\n          )}\n          <Box\n            width=\"100%\"\n            display=\"flex\"\n            justifyContent=\"space-evenly\"\n            alignItems=\"center\"\n          >\n            <Avatar />\n            <Typography variant=\"h5\" color=\"secondary\">\n              Creative Tim\n            </Typography>\n          </Box>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: opensidebar,\n          [classes.drawerClose]: !opensidebar,\n        })}\n        classes={{\n          paper: clsx(\n            {\n              [classes.drawerOpen]: opensidebar,\n              [classes.drawerClose]: !opensidebar,\n            },\n            classes.darkBackground\n          ),\n        }}\n        open={opensidebar}\n      >\n        <div className={classes.toolbar}>\n          <Box\n            width=\"100%\"\n            display=\"flex\"\n            justifyContent=\"space-evenly\"\n            alignItems=\"center\"\n          >\n            <Typography variant=\"h5\" style={{ color: \"white\" }}></Typography>\n          </Box>\n          <IconButton onClick={handlesidebar}>\n            {theme.direction === \"rtl\" ? (\n              <ChevronRightIcon style={{ color: \"white\" }} />\n            ) : (\n              <ChevronLeftIcon style={{ color: \"white\" }} />\n            )}\n          </IconButton>\n        </div>\n\n        <Divider />\n        <nav className={classes.lists}>\n          <List>\n            {SideBar.map((menu, index) => (\n              <React.Fragment key={index}>\n                <ListItemLinkContainer {...props} menuobj={menu} />\n              </React.Fragment>\n            ))}\n          </List>\n        </nav>\n        <Divider />\n      </Drawer>\n    </React.Fragment>\n  );\n}\n\nexport default withRouter(MiniDrawer);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/drk/Documents/final-project/src/pages/GeneralSetup.js\";\nimport { Box, Grid, MenuItem, Typography } from '@material-ui/core';\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport { makeStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport tableIcons, { options } from '../component/Universal/table_attributes';\nimport MROButton from '../component/FormComponents/Button';\nimport MROSelect from '../component/FormComponents/Select';\nconst useStyles = makeStyles(theme => ({\n  action: {\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: 'column',\n      justifyContent: 'flex-start'\n    }\n  }\n}));\nexport const GeneralSetup = () => {\n  const tableOptions = { ...options,\n    search: false,\n    sorting: true,\n    filtering: true,\n    selection: true\n  };\n  const columns = [{\n    title: 'Forest',\n    field: 'forest',\n    lookup: constructObject(data.map(d => d.forest))\n  }, {\n    title: 'Domain',\n    field: 'domain',\n    lookup: constructObject(data.map(d => d.domain))\n  }, {\n    title: 'DataCenter',\n    field: 'd_center',\n    lookup: constructObject(data.map(d => d.d_center))\n  }, {\n    title: 'DCName',\n    field: 'dc_name',\n    lookup: constructObject(data.map(d => d.dc_name)),\n    render: rowData => rowData.dc_name\n  }, {\n    title: 'Last(Re)Paved',\n    field: 'last_paved',\n    render: rowData => moment(rowData.last_paved).format('DD-MM-YYYY')\n  }, {\n    title: 'Status',\n    field: 'status'\n  }];\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    minHeight: \"100vh\",\n    mt: 2,\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Filter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"\",\n    icons: tableIcons,\n    options: tableOptions,\n    columns: columns,\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  })));\n};\nexport const Filter = () => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    my: 2,\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    md: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    pt: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, \"Filter :\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    md: 8,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MROSelect, {\n    name: \"forest\",\n    label: \"Forest\",\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, data && data.map(item => /*#__PURE__*/React.createElement(MenuItem, {\n    key: item.forest,\n    value: item.forest,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 59\n    }\n  }, item.forest)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MROSelect, {\n    name: \"domain\",\n    label: \"Domain\",\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, data && data.map(item => /*#__PURE__*/React.createElement(MenuItem, {\n    key: item.domain,\n    value: item.domain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 59\n    }\n  }, item.domain)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MROSelect, {\n    name: \"dc\",\n    label: \"DataCenter\",\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }, data && data.map(item => /*#__PURE__*/React.createElement(MenuItem, {\n    key: item.d_center,\n    value: item.d_center,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 59\n    }\n  }, item.d_center)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MROSelect, {\n    name: \"dc_name\",\n    label: \"DC Name\",\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }, data && data.map(item => /*#__PURE__*/React.createElement(MenuItem, {\n    key: item.dc_name,\n    value: item.dc_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 59\n    }\n  }, item.dc_name))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    md: 3,\n    lg: 3,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"flex-end\",\n    className: classes.action,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MROButton, {\n    variant: \"contained\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }, \"Trigger Repave\"), /*#__PURE__*/React.createElement(Spacer, {\n    height: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(MROButton, {\n    variant: \"contained\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }, \"Demote\"))))));\n};\nexport const Spacer = ({\n  height\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: height || '10px',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }));\n};\nexport const constructObject = arr => {\n  let obj = {};\n  arr.forEach((item, index) => {\n    obj[arr[index]] = arr[index];\n  });\n  return obj;\n};\nexport const data = Array.from(Array(10)).map((record, i) => ({\n  forest: `Forest-${i + 1}`,\n  domain: `Domain-${i + 1}`,\n  d_center: `Center-${(i + 1) * 10}`,\n  dc_name: `dcname${(i + 1) * 200}`,\n  owner: 'E123456',\n  progress: `${i + 1}/${i + 1 + 10}`,\n  request: `#${i + 1 + 50}`,\n  last_paved: Date.now(),\n  status: 'PaveCompleted',\n  reported_time: moment(Date.now()).format('DD-MM-YYYY HH:mm:ss A'),\n  failure_reason: 'Reason if any...',\n  dc_diag_check: `Check Name-${i + 1}`,\n  issuer: `Issuer name-${i + 1}`,\n  cert_name: `Cert Name-${i + 1}`,\n  restarted_by: 'E123456',\n  restarted_at: moment(Date.now()).format('DD-MM-YYYY HH:mm:ss A')\n}));","map":{"version":3,"sources":["/Users/drk/Documents/final-project/src/pages/GeneralSetup.js"],"names":["Box","Grid","MenuItem","Typography","React","MaterialTable","makeStyles","moment","tableIcons","options","MROButton","MROSelect","useStyles","theme","action","breakpoints","down","flexDirection","justifyContent","GeneralSetup","tableOptions","search","sorting","filtering","selection","columns","title","field","lookup","constructObject","data","map","d","forest","domain","d_center","dc_name","render","rowData","last_paved","format","Filter","classes","item","Spacer","height","width","arr","obj","forEach","index","Array","from","record","i","owner","progress","request","Date","now","status","reported_time","failure_reason","dc_diag_check","issuer","cert_name","restarted_by","restarted_at"],"mappings":"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","sourcesContent":["import { Box, Grid, MenuItem, Typography } from '@material-ui/core';\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport { makeStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport tableIcons, { options } from '../component/Universal/table_attributes';\nimport MROButton from '../component/FormComponents/Button';\nimport MROSelect from '../component/FormComponents/Select';\n\nconst useStyles = makeStyles(theme => ({\n    action: {\n        [theme.breakpoints.down('sm')]: {\n            flexDirection: 'column',\n            justifyContent: 'flex-start'\n        }\n    }\n}));\n\nexport const GeneralSetup = () => {\n\n    const tableOptions = {\n        ...options,\n        search: false,\n        sorting: true,\n        filtering: true,\n        selection: true,\n    };\n\n    const columns = [\n        {\n            title: 'Forest',\n            field: 'forest',\n            lookup: constructObject(data.map(d => (d.forest))),\n        }, {\n            title: 'Domain',\n            field: 'domain',\n            lookup: constructObject(data.map(d => (d.domain))),\n        },\n        {\n            title: 'DataCenter',\n            field: 'd_center',\n            lookup: constructObject(data.map(d => (d.d_center))),\n        },\n        {\n            title: 'DCName',\n            field: 'dc_name',\n            lookup: constructObject(data.map(d => (d.dc_name))),\n            render: rowData => rowData.dc_name,\n        },\n        {\n            title: 'Last(Re)Paved',\n            field: 'last_paved',\n            render: rowData => moment(rowData.last_paved).format('DD-MM-YYYY'),\n        },\n        {\n            title: 'Status',\n            field: 'status',\n        }\n    ]\n\n    return (\n        <React.Fragment>\n            <Box minHeight=\"100vh\" mt={2} p={2} >\n                <Filter />\n                <MaterialTable\n                    title=\"\"\n                    icons={tableIcons}\n                    options={tableOptions}\n                    columns={columns}\n                    data={data}\n                />\n            </Box>\n        </React.Fragment>\n    )\n}\n\nexport const Filter = () => {\n\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <Box my={2} width=\"100%\">\n                <Grid container alignItems=\"flex-start\">\n                    <Grid item container xs={12} md={1}>\n                        <Box pt={0.5}>\n                            <Typography variant=\"subtitle2\">Filter :</Typography>\n                        </Box>\n                    </Grid>\n                    <Grid item container xs={12} md={8} spacing={2}>\n                        <Grid item xs={12} md={6} lg={3}>\n                            <MROSelect\n                                name={\"forest\"}\n                                label={\"Forest\"}\n                                multiple\n                            >\n                                {data && data.map(item => <MenuItem key={item.forest} value={item.forest}>\n                                    {item.forest}\n                                </MenuItem>)}\n                            </MROSelect>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={3}>\n                            <MROSelect\n                                name={\"domain\"}\n                                label={\"Domain\"}\n                                multiple\n                            >\n                                {data && data.map(item => <MenuItem key={item.domain} value={item.domain}>\n                                    {item.domain}\n                                </MenuItem>)}\n                            </MROSelect>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={3}>\n                            <MROSelect\n                                name={\"dc\"}\n                                label={\"DataCenter\"}\n                                multiple\n                            >\n                                {data && data.map(item => <MenuItem key={item.d_center} value={item.d_center}>\n                                    {item.d_center}\n                                </MenuItem>)}\n                            </MROSelect>\n                        </Grid>\n                        <Grid item xs={12} md={6} lg={3}>\n                            <MROSelect\n                                name={\"dc_name\"}\n                                label={\"DC Name\"}\n                                multiple\n                            >\n                                {data && data.map(item => <MenuItem key={item.dc_name} value={item.dc_name}>\n                                    {item.dc_name}\n                                </MenuItem>)}\n                            </MROSelect>\n                        </Grid>\n                    </Grid>\n                    <Grid item container xs={12} md={3} lg={3} justify=\"flex-end\">\n                        <Grid item container justify=\"flex-end\" className={classes.action}>\n                            <MROButton variant=\"contained\" color=\"secondary\">Trigger Repave</MROButton>\n                            <Spacer height={10} />\n                            <MROButton variant=\"contained\" color=\"secondary\">Demote</MROButton>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n            </Box>\n        </React.Fragment>\n    )\n}\n\nexport const Spacer = ({ height }) => {\n    return (<React.Fragment>\n        <div style={{ height: height || '10px', width: '100%' }}>\n        </div>\n    </React.Fragment>)\n}\n\nexport const constructObject = arr => {\n    let obj = {};\n    arr.forEach((item, index) => {\n        obj[arr[index]] = arr[index]\n    })\n    return obj;\n};\n\nexport const data = Array.from(Array(10)).map((record, i) => ({\n    forest: `Forest-${i + 1}`,\n    domain: `Domain-${i + 1}`,\n    d_center: `Center-${(i + 1) * 10}`,\n    dc_name: `dcname${(i + 1) * 200}`,\n    owner: 'E123456',\n    progress: `${i + 1}/${(i + 1) + 10}`,\n    request: `#${(i + 1) + 50}`,\n    last_paved: Date.now(),\n    status: 'PaveCompleted',\n    reported_time: moment(Date.now()).format('DD-MM-YYYY HH:mm:ss A'),\n    failure_reason: 'Reason if any...',\n    dc_diag_check: `Check Name-${i + 1}`,\n    issuer: `Issuer name-${i + 1}`,\n    cert_name: `Cert Name-${i + 1}`,\n    restarted_by: 'E123456',\n    restarted_at: moment(Date.now()).format('DD-MM-YYYY HH:mm:ss A'),\n}))\n\n"]},"metadata":{},"sourceType":"module"}